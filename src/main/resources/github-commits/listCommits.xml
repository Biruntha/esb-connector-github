<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~    http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->

<template name="listCommits" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="owner" description="Owner of the repository"/>
    <parameter name="repo" description="Name of the repository"/>
    <parameter name="sha"
               description="SHA or branch to start listing commits from. Default: the repositoryâ€™s default branch (usually master) "/>
    <parameter name="path"
               description="Only commits containing this file path will be returned"/>
    <parameter name="author"
               description="GitHub login or email address by which to filter by commit author"/>
    <parameter name="since"
               description="Only commits after this date will be returned. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"/>
    <parameter name="until"
               description="Only commits before this date will be returned. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"/>
    <parameter name="page" description="Page number"/>
    <parameter name="perPage" description="Items per page"/>
    <sequence>
        <property expression="$func:owner" name="uri.var.owner"
                  scope="default" type="STRING"/>
        <property expression="$func:repo" name="uri.var.repo" scope="default"
                  type="STRING"/>
        <property expression="$func:sha" name="uri.var.sha" scope="default"
                  type="STRING"/>
        <property expression="$func:path" name="uri.var.path" scope="default"
                  type="STRING"/>
        <property expression="$func:author" name="uri.var.author"
                  scope="default" type="STRING"/>
        <property expression="$func:since" name="uri.var.since"
                  scope="default" type="STRING"/>
        <property expression="$func:until" name="uri.var.until"
                  scope="default" type="STRING"/>
        <property expression="$func:page" name="uri.var.page"
                  scope="default" type="STRING"/>
        <property expression="$func:perPage" name="uri.var.perPage"
                  scope="default" type="STRING"/>
        <property name="uri.var.urlQuery" scope="default" type="STRING"
                  value=""/>
        <script language="js">
            <![CDATA[var sha = mc.getProperty("uri.var.sha");
                var path = mc.getProperty("uri.var.path");
                var author = mc.getProperty("uri.var.author");
                var since = mc.getProperty("uri.var.since");
                var until = mc.getProperty("uri.var.until");
                var page = mc.getProperty("uri.var.page");
                var perPage = mc.getProperty("uri.var.perPage");
                var urlQuery = "";
                  // constructing the optional url parameters
                  if (sha!=null && sha!= ""){
                     urlQuery+='sha='+ sha +'&';
                  }
                  if (path!=null && path!= ""){
                     urlQuery+='path=' + path + '&';
                  }
                  if (author!=null && author!= ""){
                     urlQuery+='author='+ author +'&';
                  }
                  if (since!=null && since!= ""){
                     urlQuery+='since='+ since +'&';
                  }
                  if (until!=null && until!= ""){
                     urlQuery+='until='+ until +'&';
                  }
                  if (page!=null && page!= ""){
                     urlQuery+='page='+ page +'&';
                  }
                  if (perPage!=null && perPage!= ""){
                     urlQuery+='per_page='+ perPage +'&';
                  }
                  if(urlQuery!=""){
                     urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
                  }
                  mc.setProperty('uri.var.urlQuery', urlQuery);]]></script>
        <call>
            <endpoint>
                <http method="get" trace="disable"
                      uri-template="{+uri.var.apiUrl}/repos/{+uri.var.owner}/{+uri.var.repo}/commits{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
    </sequence>
</template>